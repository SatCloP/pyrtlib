
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/plot_log_dependance_tb.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_plot_log_dependance_tb.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plot_log_dependance_tb.py:


Logarithmic dependence of monochromatic radiance at 22.235 and 183 GHz
======================================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-12

This example shows the logarithmic dependence of monochromatic radiance at 22.235 GHz and 183 GHz
on the water vapor content in the atmosphere. The brigthness temperature are calculated using the
:py:class:`pyrtlib.tb_spectrum.TbCloudRTE` method for the zenith view angle and
the following water vapor content: 1/8, 1/4, 1/2, 1, 2, 4, 8 times the water vapor
content of the reference atmosphere. The reference atmosphere is the Tropical atmosphere

.. GENERATED FROM PYTHON SOURCE LINES 12-90

.. code-block:: Python


    # Reference: Huang & Bani, 2014. 

    import numpy as np

    import matplotlib.pyplot as plt
    import matplotlib as mpl
    mpl.rcParams["axes.spines.right"] = True
    mpl.rcParams["axes.spines.top"] = True
    plt.rcParams.update({'font.size': 30})


    from pyrtlib.climatology import AtmosphericProfiles as atmp
    from pyrtlib.tb_spectrum import TbCloudRTE
    from pyrtlib.absorption_model import O2AbsModel
    from pyrtlib.utils import ppmv2gkg, mr2rh

    z, p, _, t, md = atmp.gl_atm(atmp.TROPICAL)

    tb_23 = []
    tb_183 = []
    tau_23 = []
    tau_183 = []
    m = [1/8, 1/4, 1/2, 1, 2, 4, 8]

    for i in range(0, 7):
        gkg = ppmv2gkg(md[:, atmp.H2O], atmp.H2O) * m[i]
        rh = mr2rh(p, t, gkg)[0] / 100

        # frq = np.arange(20, 201, 1)
        frq = np.array([22.235, 183])
        rte = TbCloudRTE(z, p, t, rh, frq)
        rte.init_absmdl('R22SD')
        O2AbsModel.model = 'R22'
        df = rte.execute()
        df['tau'] = df.tauwet + df.taudry
        tb_23.append(df.tbtotal[0])
        tb_183.append(df.tbtotal[1])
        tau_23.append(df.tau[0])
        tau_183.append(df.tau[1])
    
    tb_023 = np.array(tb_23) - tb_23[3]
    tb_0183 = np.array(tb_183) - tb_183[3]

    fig, axes = plt.subplots(2, 2, figsize=(24, 14), sharex=True)
    axes[0, 1].tick_params(axis='both', direction='in', length=10, width=.5)
    axes[0, 1].plot(np.log2(m), tb_0183, linestyle='--', linewidth=3, color='black')
    axes[0, 1].plot(np.log2(m), tb_0183, marker='+', linestyle='None', color='r', ms=20, markeredgewidth=5)
    axes[0, 1].set_title(f"{frq[1]} GHz")
    axes[0, 1].grid(True, 'both')
    axes[0, 1].annotate("c)", xy=(0.02, 0.05), xycoords='axes fraction', fontsize=40)

    axes[0, 0].set_ylabel('$\Delta T_B$ [K]')
    axes[0, 0].tick_params(axis='both', direction='in', length=10, width=.5)
    axes[0, 0].plot(np.log2(m), tb_023, linestyle='--', linewidth=3, color='black')
    axes[0, 0].plot(np.log2(m), tb_023, marker='+', linestyle='None', color='r', ms=20, markeredgewidth=5)
    axes[0, 0].set_title(f"{frq[0]} GHz")
    axes[0, 0].grid(True, 'both')
    axes[0, 0].annotate("a)", xy=(0.02, 0.05), xycoords='axes fraction', fontsize=40)

    axes[1, 1].set_xlabel('$log_2(SF_{q_{H_2O}}))$')
    axes[1, 1].tick_params(axis='both', direction='in', length=10, width=.5)
    axes[1, 1].plot(np.log2(m), tau_183, linestyle='--', linewidth=3, color='black')
    axes[1, 1].plot(np.log2(m), tau_183, marker='+', linestyle='None', color='blue', ms=20, markeredgewidth=5)
    axes[1, 1].grid(True, 'both')
    axes[1, 1].annotate("d)", xy=(0.02, 0.88), xycoords='axes fraction', fontsize=40)

    axes[1, 0].set_xlabel('$log_2(SF_{q_{H_2O}})$')
    axes[1, 0].set_ylabel('$\\tau$ [Np]')
    axes[1, 0].tick_params(axis='both', direction='in', length=10, width=.5)
    axes[1, 0].plot(np.log2(m), tau_23, linestyle='--', linewidth=3, color='black')
    axes[1, 0].plot(np.log2(m), tau_23, marker='+', linestyle='None', color='blue', ms=20, markeredgewidth=5)
    axes[1, 0].grid(True, 'both')
    axes[1, 0].annotate("b)", xy=(0.02, 0.88), xycoords='axes fraction', fontsize=40)

    plt.tight_layout()

    plt.show()



.. image-sg:: /examples/images/sphx_glr_plot_log_dependance_tb_001.png
   :alt: 22.235 GHz, 183.0 GHz
   :srcset: /examples/images/sphx_glr_plot_log_dependance_tb_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/pyrtlib/pyrtlib/docs/script_examples/plot_log_dependance_tb.py:64: SyntaxWarning: invalid escape sequence '\D'
      axes[0, 0].set_ylabel('$\Delta T_B$ [K]')





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.215 seconds)


.. _sphx_glr_download_examples_plot_log_dependance_tb.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_log_dependance_tb.ipynb <plot_log_dependance_tb.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_log_dependance_tb.py <plot_log_dependance_tb.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_log_dependance_tb.zip <plot_log_dependance_tb.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
